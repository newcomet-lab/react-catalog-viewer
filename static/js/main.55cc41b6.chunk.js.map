{"version":3,"sources":["assets/images/tea-light-candle.jpeg","assets/images/white-light-candle.jpg","assets/images/pink-light-candle.jpeg","assets/images/green-light-candle.jpeg","../node_modules/h8k-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","components/Thumbs.js","components/Viewer.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","Thumbs","items","currentIndex","handleClick","catalog","idx","key","data-testid","onClick","className","style","backgroundImage","thumb","Viewer","catalogImage","alt","src","App","catalogsList","image1","image","image2","image3","image4","useState","catalogs","setCatalogs","activeIndex","setActiveIndex","isSliding","setIsSliding","slideDuration","handleNextClick","_catalogs","slice","concat","useEffect","interval","setInterval","clearInterval","header","Array","type","onChange","_val","target","checked","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.55cc41b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tea-light-candle.cef394ab.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/white-light-candle.29140f80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pink-light-candle.c82bfc12.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/green-light-candle.045f594e.jpeg\";","var map = {\n\t\"./h8k-logo_2.entry.js\": [\n\t\t24,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 19;\nmodule.exports = webpackAsyncContext;","import React, { Fragment } from 'react'\r\n\r\nfunction Thumbs({ items, currentIndex, handleClick }) {\r\n    \r\n    return (\r\n        <Fragment>\r\n            {\r\n                items.map((catalog, idx) => (\r\n                    <span   \r\n                        id={idx} \r\n                        key={idx} \r\n                        data-testid={'thumb-button-' + idx}\r\n                        onClick={() => handleClick(idx)}\r\n                    >\r\n                        <span \r\n                            className={'inline-flex w-90 pa-4 image-thumb ' + \r\n                                (idx === currentIndex ? 'thumb-selected' : '')} \r\n                        >\r\n                            <span \r\n                                className='mx-5 thumb' \r\n                                id={idx} \r\n                                style={{ backgroundImage: 'url('+ catalog.thumb + ')' }}\r\n                            />\r\n                        </span>\r\n                    </span>\r\n                ))\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Thumbs\r\n\r\n","import React from 'react'\r\n\r\nfunction Viewer({ catalogImage }) {\r\n  return (\r\n    <div className='layout-row justify-content-center'>\r\n      <img \r\n        alt='catalog-view' \r\n        className='w-75' \r\n        src={catalogImage}\r\n        data-testid='catalog-view' \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Viewer\r\n\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport 'h8k-components'\r\n\r\nimport { image1, image2, image3, image4 } from './assets/images'\r\nimport { Thumbs, Viewer } from './components'\r\n\r\nconst title = 'Catalog Viewer'\r\n\r\nfunction App() {\r\n  const catalogsList = [\r\n    {\r\n      thumb: image1,\r\n      image: image1\r\n    },\r\n    {\r\n      thumb: image2,\r\n      image: image2\r\n    },\r\n    {\r\n      thumb: image3,\r\n      image: image3\r\n    },\r\n    {\r\n      thumb: image4,\r\n      image: image4\r\n    }\r\n  ]\r\n\r\n  const [ catalogs, setCatalogs ] = useState([...catalogsList])\r\n  const [ activeIndex, setActiveIndex ] = useState(0)\r\n  const [ isSliding, setIsSliding ] = useState(false)\r\n  const [ slideTimer, setSlideTimer ] = useState(null)\r\n  const [ slideDuration ] = useState(3000)\r\n\r\n  const handleNextClick = () => {\r\n    if (activeIndex == 3) {\r\n      const _catalogs = catalogs.slice(1).concat(catalogs[0]);\r\n      setCatalogs([..._catalogs]);\r\n    } else {\r\n      setActiveIndex(activeIndex + 1);\r\n    }\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    if (activeIndex == 0) {\r\n      const _catalogs = new Array(catalogs[3]).concat(catalogs.slice(0, 3));\r\n      setCatalogs([..._catalogs]);\r\n    } else {\r\n      setActiveIndex(activeIndex - 1);\r\n    }\r\n  }\r\n\r\n  const handleThumbClick = (idx) => {\r\n    setActiveIndex(idx);\r\n  }\r\n\r\n  const handleSliding = (e) => {\r\n    const _val = e.target.checked;\r\n    setIsSliding(_val);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isSliding) {\r\n      const interval = setInterval(() => {\r\n        handleNextClick();\r\n      }, slideDuration);\r\n      return () => clearInterval(interval);    \r\n    }\r\n  }, [isSliding, activeIndex, catalogs]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h8k-navbar header={ title }></h8k-navbar>\r\n      <div className='layout-column justify-content-center mt-75'>\r\n        <div className='layout-row justify-content-center'>\r\n          <div className='card pt-25'>\r\n            <Viewer catalogImage={ catalogs[activeIndex].image } />\r\n            <div className='layout-row justify-content-center align-items-center mt-20'>\r\n            <button \r\n              className=\"icon-only outlined\"\r\n              data-testid=\"prev-slide-btn\"\r\n              onClick={handlePrevClick}\r\n            >\r\n              <i className=\"material-icons\">arrow_back</i>\r\n            </button>\r\n              <Thumbs \r\n                items={ catalogs } \r\n                currentIndex={ activeIndex } \r\n                handleClick={handleThumbClick}\r\n              />\r\n            <button \r\n              className=\"icon-only outlined\"\r\n              data-testid=\"next-slide-btn\"\r\n              onClick={handleNextClick}\r\n            >\r\n              <i className=\"material-icons\">arrow_forward</i>\r\n            </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='layout-row justify-content-center mt-25'>\r\n          <input \r\n            type='checkbox'\r\n            data-testid='toggle-slide-show-button'\r\n            onChange={handleSliding}\r\n          /> \r\n          <label className='ml-6'>Start Slide Show</label>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport registerServiceWorker from './registerServiceWorker'\r\nimport {applyPolyfills, defineCustomElements} from 'h8k-components/loader'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\nregisterServiceWorker()\r\napplyPolyfills().then(() => {\r\n    defineCustomElements(window)\r\n})\r\n"],"sourceRoot":""}